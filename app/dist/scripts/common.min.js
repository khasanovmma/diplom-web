"use strict";

setTimeout(function () {
  var option = document.querySelector('option');
  option.innerHTML = 'Tilni o\'zgartirish';
}, 1500);
window.addEventListener('scroll', function () {
  var scrollDistance = window.scrollY;

  if (window.innerWidth > 768) {
    document.querySelectorAll('.sections-body').forEach(function (el, i) {
      if (el.offsetTop - document.querySelector('.nav').clientHeight <= scrollDistance) {
        document.querySelectorAll('.nav a').forEach(function (el) {
          if (el.classList.contains('active')) {
            el.classList.remove('active');
          }
        });
        document.querySelectorAll('.nav li')[i].querySelector('a').classList.add('active');
      }
    });
  }
}); // Get the modal

var modal = document.querySelector('.modal');
var bd = document.querySelector('body');
var modalTitle = document.querySelector('.modal-block__title');
var modalContent = document.querySelector('.modal-block__text');
var newsTitle = document.querySelectorAll('.news-block__title');
var newsContent = document.querySelectorAll('.news-block__text'); // Get the button that opens the modal

var btn = document.querySelectorAll("#myBtn"); // Get the <span> element that closes the modal

var span = document.getElementsByClassName("close")[0]; // When the user clicks the button, open the modal 

var _loop = function _loop(i) {
  btn[i].addEventListener('click', function () {
    console.log(modalTitle.innerHTML);
    modal.style.display = "block";
    bd.style.overflow = 'hidden';
    modalTitle.innerHTML = newsTitle[i].innerHTML;
    modalContent.innerHTML = newsContent[i].innerHTML;
  });
};

for (var i = 0; i < btn.length; i++) {
  _loop(i);
} // When the user clicks on <span> (x), close the modal


span.onclick = function () {
  modal.style.display = "none";
  bd.style.overflow = 'auto';
}; // When the user clicks anywhere outside of the modal, close it


window.onclick = function (event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
};

function googleTranslateElementInit() {
  new google.translate.TranslateElement({
    pageLanguage: 'uz'
  }, 'google_translate_element');
}

function animate(obj, initVal, lastVal, duration) {
  var startTime = null; //get the current timestamp and assign it to the currentTime variable

  var currentTime = Date.now(); //pass the current timestamp to the step function

  var step = function step(currentTime) {
    //if the start time is null, assign the current time to startTime
    if (!startTime) {
      startTime = currentTime;
    } //calculate the value to be used in calculating the number to be displayed


    var progress = Math.min((currentTime - startTime) / duration, 1); //calculate what to be displayed using the value gotten above

    obj.innerHTML = Math.floor(progress * (lastVal - initVal) + initVal); //checking to make sure the counter does not exceed the last value (lastVal)

    if (progress < 1) {
      window.requestAnimationFrame(step);
    } else {
      window.cancelAnimationFrame(window.requestAnimationFrame(step));
    }
  }; //start animating


  window.requestAnimationFrame(step);
}

var text1 = document.getElementById('value1');
var text2 = document.getElementById('value2');
var text3 = document.getElementById('value3');

var load = function load() {
  animate(text1, 0, 564, 5000);
  animate(text2, 0, 10153, 5000);
  animate(text3, 100, 10717, 5000);
}; // nav link


var links = document.querySelectorAll('.nav__link');
var pages = document.querySelectorAll('.page'); // nav

var navControl = document.querySelectorAll('.nav__btn, .nav__close'),
    navToggle = document.querySelectorAll('.nav__btn, .nav__list');
navControl.forEach(function (btn) {
  return btn.addEventListener('click', function () {
    navToggle.forEach(function (el) {
      return el.classList.toggle('open');
    });
  });
}); // slider

var $slider = document.querySelector('.slider');
var $sliderBtn = document.querySelectorAll('[data-target]');
var $sliderItem = document.querySelectorAll('.slider__item');
var activeSlide = 0;
$sliderItem.forEach(function (item, i) {
  if (item.classList.contains('active')) {
    activeSlide = i;
  }
});
$sliderBtn.forEach(function (btn) {
  btn.addEventListener('click', function (e) {
    sliderMove(e.target.getAttribute('id'));
  });
});

function sliderMove(direction) {
  if (direction === 'next') {
    if (activeSlide < $sliderItem.length - 1) {
      activeSlide++;
    } else {
      activeSlide = 0;
    }
  } else {
    if (activeSlide > 0) {
      activeSlide--;
    } else {
      activeSlide = $sliderItem.length - 1;
    }
  }

  $sliderItem.forEach(function (item) {
    item.classList.remove('active');
  });
  $sliderItem[activeSlide].classList.add('active');
}

var interval = setInterval(function () {
  return sliderMove('next');
}, 3000); // slider

var $mainSlider = document.querySelector('.main-slider');
var $mainSliderBtn = document.querySelectorAll('[data-target]');
var $mainSliderItem = document.querySelectorAll('.main-slider__item');
var activeSlid = 0;
$mainSliderItem.forEach(function (item, i) {
  if (item.classList.contains('active')) {
    activeSlid = i;
  }
});
$mainSliderBtn.forEach(function (btn) {
  btn.addEventListener('click', function (e) {
    sliderChange(e.target.getAttribute('id'));
  });
});

function sliderChange(direction) {
  if (direction === 'next') {
    if (activeSlid < $mainSliderItem.length - 1) {
      activeSlid++;
    } else {
      activeSlid = 0;
    }
  } else {
    if (activeSlid > 0) {
      activeSlid--;
    } else {
      activeSlid = $mainSliderItem.length - 1;
    }
  }

  $mainSliderItem.forEach(function (item) {
    item.classList.remove('active');
  });
  $mainSliderItem[activeSlid].classList.add('active');
}

var mainInterval = setInterval(function () {
  return sliderChange('next');
}, 3000);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
